{"version":3,"sources":["utils/wallet.js","utils/tezos.js","components/AddContact.js","components/Navbar.js","utils/setTez.js","utils/setInstantTez.js","utils/fetchTransaction.js","components/SendTez.js","utils/getTez.js","components/ReceiveTez.js","components/PendingTransaction.js","components/qrCode.js","App.js","index.js"],"names":["wallet","BeaconWallet","name","preferredNetwork","connectWallet","requestPermissions","network","type","getAccount","client","getActiveAccount","account","address","tezos","TezosToolkit","setWalletProvider","AddContact","useState","contact","setContact","database","activeAccount","fetch","data","json","useEffect","fetchContacts","arr","key","res","Cname","Caddress","olditems","addContact","ContactName","document","getElementById","value","ContactAddress","method","headers","body","JSON","stringify","alert","className","action","id","placeholder","onClick","map","itemName","Navbar","setAccount","balance","setBalance","window","navigator","onLine","refreshBalance","console","log","tz","getBalance","then","onconnectwallet","activeAddress","src","integrity","crossorigin","href","sendTez","tez","mark_5","at","contract","methods","send","amount","mutez","op","confirmation","sendInstantTez","instantPay","default","fetchTransaction","axios","get","SendTez","mode","setMode","change","setChange","adress","setAddress","myRef","useRef","changeMode","modeType","resp","changeVal","event","val","target","onSend","e","preventDefault","rAddress","class","onKeyUp","ref","getTez","cKey","receiveTez","ReceiveTez","onReceive","Pending","to","valid","transaction","setTransaction","onCopyKey","clipboard","writeText","storage","count","i","list","length","_from","_to","parseInt","record","undefined","substring","width","height","QRCode","props","setData","stopRef","onResult","result","error","text","current","scrollIntoView","video","srcObject","disconnect","stopCamera","info","style","border","margin","disabled","App","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.d4f57084.chunk.js","sourcesContent":["import { BeaconWallet } from \"@taquito/beacon-wallet\";\n\n// Asking For Wallet and Setting up Wallet\nexport const wallet = new BeaconWallet({\n    name:\"Tez Pay\",\n    preferredNetwork: \"jakartanet\",\n\n})\n\nexport const connectWallet = async()=>{\n    await wallet.requestPermissions({network:{type:\"jakartanet\"}});\n}\n\nexport const getAccount = async()=>{\n    const account = await wallet.client.getActiveAccount();\n    \n    if(account){\n        return account.address;\n    }\n    else{\n        return \"\";\n    }\n}","\n// Connecting To Tezos Jakartanet enviroment\nimport { wallet } from \"./wallet\";\nimport { TezosToolkit } from \"@taquito/taquito\";\n\nexport const tezos = new TezosToolkit(\"https://jakartanet.smartpy.io\");\n\n\ntezos.setWalletProvider(wallet);\n","import React, { useEffect, useState } from \"react\";\nimport { getAccount } from \"../utils/wallet\";\n\n// Return Contact Component\nconst AddContact = () => {\n    // Storing Contact Objects Array\n    const [contact, setContact] = useState([{}]);\n\n    // Fetching JSON File from database\n    const database = async () => {\n        const activeAccount = await getAccount();\n\n        //Checking Active Account\n        if (activeAccount != \"\") {\n            const data = await fetch(`https://contacts-7f66a-default-rtdb.firebaseio.com/${activeAccount}.json`);\n            const json = await data.json();\n            \n            // console.log(json);\n            return json;\n        }\n    }\n    //Setting up all the contacts in div components\n    useEffect(() => {\n\n        const fetchContacts = async () => {\n            let arr = [];\n\n            const res = await database();\n            // console.log(res);\n\n            for (let key in res) {\n\n                const Cname = res[key].Cname;\n                const Caddress = res[key].Caddress;\n\n                // Checking Duplicate Values\n                if (!arr[Cname]) {\n                    setContact(olditems =>\n                        [...olditems, { Cname, Caddress }]\n                    );\n                }\n                arr[Cname] = Caddress;\n            }\n\n            // console.log(\"Fetch Result\");\n            // console.log(contact);\n        };\n\n        // For Calling Fetch Data only once\n        return ()=>fetchContacts();\n    }, []);\n\n    // Function to ADD data to Firebase Database\n    const addContact = async () => {\n\n        const activeAccount = await getAccount();\n\n        if (activeAccount != \"\") {\n            const ContactName = document.getElementById(\"ContactName\").value;\n            const ContactAddress = document.getElementById(\"ContactAddress\").value;\n            \n            //Making Database of name of Public Key\n            const res = await fetch(`https://contacts-7f66a-default-rtdb.firebaseio.com/${activeAccount}.json`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-type\": \"application/json\",\n                    },\n                    body: JSON.stringify({\n                        Cname: ContactName,\n                        Caddress: ContactAddress,\n                    }),\n                }\n            )\n\n            // Checking response from database\n            if (res) {\n                alert(\"Success\");\n            }\n            else {\n                alert(\"Failed\");\n            }\n        }\n    }\n\n    return (\n        <>\n            <center>\n                <div className=\"main\">\n                    <div className=\"heading\">\n                        <h1>Add To Contact</h1>\n                    </div>\n\n                    <div className=\"contact-list-box\">\n                        <div className=\"cont\">\n                            <form action=\"\" className=\"input-elements\">\n                                <h3>Create New Contact</h3>\n                                {/* <label >Name</label> */}\n                                <input type=\"text\" id=\"ContactName\" placeholder=\"Name\" />\n                                {/* <label >Address</label> */}\n                                <input type=\"text\" id=\"ContactAddress\" name=\"public-key\" placeholder=\"Public Key\" />\n                                <button type=\"button\" onClick={addContact} className=\"contactBtn\">Add Contact</button>\n                            </form>\n                        </div>\n                        <hr></hr>\n                        <h2>Contacts</h2>\n                        \n                        {contact.map((itemName) => {\n                            if (itemName.Cname) {\n                                return (\n                                    <div className=\"contact\" id=\"contact-1\">\n                                        <p className=\"name\">{itemName.Cname}</p>\n                                        <p className=\"public_key\">{itemName.Caddress}</p>\n                                    </div>\n                                )\n                            }\n                        })}\n                    </div>\n                </div>\n            </center>\n        </>\n    )\n};\n\nexport default AddContact;","import { useEffect, useState } from \"react\";\nimport { tezos } from \"../utils/tezos\";\nimport { connectWallet, getAccount } from \"../utils/wallet\";\nimport AddContact from \"./AddContact\";\nimport React from \"react\";\n\n\n// Fixed Componet of React App Shows Wallet Balance and Address\nconst Navbar = () => {\n\n  // For Getting / Setting the wallet Account\n  const [account,setAccount] = useState(\"\");\n  // For Getting and Displaying wallet balance\n  const [balance,setBalance] = useState(\"\");\n  const [loading,setLoading] = useState(0);\n  \n  // Fetching Saved Account if any\n  useEffect(()=>{\n    (async ()=>{\n      \n      if(window.navigator.onLine){\n        try{\n          const activeAccount = await getAccount();\n          setAccount(activeAccount);\n          \n          refreshBalance(activeAccount);\n        }\n        catch(err){\n          console.log(\"No Connection Found\");\n        }\n      }\n      \n    })();\n  },[]);\n\n  // Checking the balance and refresh It.\n  const refreshBalance = async (address)=>{\n    if(address!=\"\"){\n      tezos.tz.getBalance(address).then((balance)=>{\n        console.log(\"your balance is \"+balance);\n\n        var convertedBalance = balance/1000000;\n        setBalance(convertedBalance);\n      });\n    }\n  }\n\n  // Connecting wallet Account with App\n  const onconnectwallet = async ()=>{\n    await connectWallet();\n    const activeAddress = await getAccount();\n    setAccount(activeAddress);\n    \n    refreshBalance(activeAddress);\n  }\n  \n  return (\n    <>\n    <script src=\"https://code.jquery.com/jquery-3.4.1.slim.min.js\" integrity=\"sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\" crossorigin=\"anonymous\"></script>\n\n    <div className=\"navbar\">\n      <div className=\"container py-1\">\n      <div className=\"d-flex\">\n          \n          <button onClick={onconnectwallet} className=\"btn\">\n            {account !==\"\" ? account : \"Connect Wallet\"}\n          </button>\n        </div>\n        <a href=\"/\" className=\"navbar-brand name\">\n          {balance !==\"\"? `Balance: ${balance} ꜩ` : \"Tez Pay\" }\n        </a>\n        \n      </div>\n    </div>\n    </>\n  );\n\n};\n\nexport default Navbar;\n\n","\nimport { tezos } from \"./tezos\";\nimport { connectWallet,getAccount } from \"./wallet\";\n\n// Setting Up Contract Key Based Contract calling sendTez Method on Michelson Contract\nexport const sendTez = async (address,tez)=>{\n    \n    // const trail = \"KT1UrdXi1Mx7wJxvcuANu3gERN9xP5H2AxW3\";\n    // const mark_2 = \"KT1JvzCu4Lv29XgknCASLGghrousxQcjp3sy\";\n    // const mark_3 = \"KT1TonohtFcTSb7d2roDFtSn4cNkvWaLc7kr\";\n    // const mark_4 = \"KT1JisCVeLfktW973LTKXs96ukGGMf2C1Uww\";\n    const mark_5 = \"KT1NwBTADHU1XYsiEXMAgGsKYTNTaRdSoKWg\";\n    \n    const check = await getAccount();\n    \n    if(check==\"\"){\n      \n        await connectWallet();\n        const activeAddress = await getAccount();\n    }\n    try{\n        const contract = await tezos.wallet.at(mark_5);\n        \n        const op = await contract.methods.sendTez(address).send({\n            amount: tez,\n            mutez:false,\n        });\n        await op.confirmation(1);\n        // console.log(address,tez);\n    }\n    catch(e){\n        alert(\"Transaction Aborted\");\n    }\n}","import { tezos } from \"./tezos\";\nimport { connectWallet,getAccount } from \"./wallet\";\n\n//Setting Up Instant Pay Contract \nexport const sendInstantTez = async (address,tez)=>{\n    \n    const instantPay = \"KT1FeYjzBiuMTDZKcG2TkHCoYnDB7h8PvG3H\";\n    \n    const check = await getAccount();\n    \n    if(check==\"\"){\n        await connectWallet();\n        const activeAddress = await getAccount();\n    }\n    try{\n        const contract = await tezos.wallet.at(instantPay);\n        // console.log(contract);\n        const op = await contract.methods.default(address).send({\n            amount: tez,\n            mutez:false,\n        });\n        await op.confirmation(1);\n        // console.log(address,tez);\n    }\n    catch(e){\n        alert(\"Transaction Aborted\");\n    }\n    \n}","import axios from \"axios\";\n\n// Fetch Data of Transaction Available in Contract\nexport const fetchTransaction = async ()=>{\n    try{\n        \n        const res = await axios.get(\"https://api.jakartanet.tzkt.io/v1/contracts/KT1NwBTADHU1XYsiEXMAgGsKYTNTaRdSoKWg/storage/\");\n        return res.data;\n        \n    }\n    catch(err){\n        throw err;\n    }\n}","import { sendTez } from \"../utils/setTez\";\nimport { sendInstantTez } from \"../utils/setInstantTez\";\nimport { fetchTransaction } from \"../utils/fetchTransaction\";\nimport { connectWallet, getAccount } from \"../utils/wallet\";\nimport { useEffect, useRef, useState } from \"react\";\n\n// A Component to send Tez with Two Modes\nconst SendTez = () => {\n\n    // Store current Type of Payment\n    const [mode, setMode] = useState(\"Instant\");\n    // Used for avaiabling Input Field also for typing Direct Public Key\n    const [change, setChange] = useState(0);\n    // Store address from contacts and put in \"rAddress\" Field\n    const [adress, setAddress] = useState(\"\");\n\n    // Refrencing a Input Fiels\n    const myRef = useRef(null);\n\n    //Changing Modes\n    const changeMode = (modeType) => {\n        setMode(modeType);\n    }\n\n    // Fetching Data of contacts while Loading website\n    let resp = \"\";\n    useEffect(() => {\n        (async () => {\n            const activeAccount = await getAccount();\n            if (activeAccount != \"\") {\n                const data = await fetch(`https://contacts-7f66a-default-rtdb.firebaseio.com/${activeAccount}.json`);\n                resp = await data.json();\n            }\n        })();\n    });\n\n    // Changing Value of Address by Detecting Name Avaiable in Contact\n    const changeVal = async (event) => {\n        setChange(0);\n        let val = event.target.value;\n\n        if (val == \"\") {\n            setAddress(\"\");\n        }\n\n        let storage = \"\";\n        for (let key in resp) {\n\n            const name = resp[key].Cname;\n            const address = resp[key].Caddress;\n\n            if (val == name) {\n                console.log(name);\n\n                setChange(1);\n                setAddress(address);\n                storage = address;\n            }\n        }\n    }\n\n    // Sending Tez as per Mode requirement\n    const onSend = async (e) => {\n        e.preventDefault();\n\n        const check = await getAccount();\n\n        if (check == \"\") {\n            await connectWallet();\n            const activeAddress = await getAccount();\n        }\n\n        const storage = await fetchTransaction();\n        // console.log(check);\n        // console.log(\"-----\")\n        // console.log(storage);\n\n        const rAddress = document.getElementById('rAddress').value;\n        const amount = document.getElementById('Tez').value;\n\n        if (rAddress == \"\" || amount == \"\") {\n            alert(\"Please Enter value\");\n            return;\n        }\n        if (mode == \"Contract\") {\n            await sendTez(rAddress, amount);\n        }\n        else {\n            await sendInstantTez(rAddress, amount);\n        }\n    }\n\n    return (\n        <div class=\"outer\">\n\n            <div class=\"payment-type\">\n                {mode == \"Contract\"\n                    ?\n                    <>\n                        <p class=\"instant\" onClick={() => changeMode(\"Instant\")}>Instant Pay</p>\n                        <p class=\"normal\" onClick={() => changeMode(\"Contract\")}>Pay</p>\n                    </>\n                    :\n                    <>\n                        <p class=\"normal\" onClick={() => changeMode(\"Instant\")}>Instant Pay</p>\n                        <p class=\"instant\" onClick={() => changeMode(\"Contract\")}>Pay</p>\n                    </>\n                }\n\n            </div>\n            <form action=\"\">\n                <input type=\"text\" onKeyUp={changeVal} id=\"receiverName\" placeholder=\"User Name\" />\n                {\n                    /* For Making Free the Input Addres Field when Required */\n                    change == 1\n                        ? <input type=\"text\" ref={myRef} name=\"\" id=\"rAddress\" value={adress} placeholder=\"Public Key\" />\n                        : <input type=\"text\" ref={myRef} name=\"\" id=\"rAddress\" placeholder=\"Public Key\" />\n                }\n\n                <input type=\"text\" name=\"\" id=\"Tez\" placeholder=\"Ammount (In Tez)\" />\n                <button class=\"send_tez_button\" onClick={onSend} >Send Tez</button>\n            </form>\n        </div>\n    )\n};\n\nexport default SendTez;","import { tezos } from \"./tezos\";\n\n// Connect to receiveTez function of contract\n\nexport const getTez = async (cKey)=>{\n    \n    // const trail = \"KT1UrdXi1Mx7wJxvcuANu3gERN9xP5H2AxW3\";\n    // const mark_2 = \"KT1JvzCu4Lv29XgknCASLGghrousxQcjp3sy\";\n    // const mark_3 = \"KT1TonohtFcTSb7d2roDFtSn4cNkvWaLc7kr\";\n    // const mark_4 = \"KT1JisCVeLfktW973LTKXs96ukGGMf2C1Uww\";\n    const mark_5 = \"KT1NwBTADHU1XYsiEXMAgGsKYTNTaRdSoKWg\";\n\n    const contract = await tezos.wallet.at(mark_5);\n    \n    const op = await contract.methods.receiveTez(cKey).send();\n\n    await op.confirmation(1);\n    \n}","import { getTez } from \"../utils/getTez\";\nimport { connectWallet, getAccount } from \"../utils/wallet\";\n\n// Component For Receiving Tez by Providing Contract Key\nconst ReceiveTez = () => {\n    // Function to connect to Contract for Receiving Amount\n    const onReceive = async (e) => {\n        e.preventDefault();\n\n        const check = await getAccount();\n        if (check == \"\") {\n            console.log(\"No Wallet Found\");\n            await connectWallet();\n            await getAccount();\n        }\n        const cKey = document.getElementById('cKey').value;\n        console.log(cKey);\n        if (cKey == \"\") {\n            alert(\"Please Enter value\");\n            return;\n        }\n        await getTez(cKey);\n    }\n\n    return (\n        <div class=\"outer\">\n            <p class=\"payment-type\" >Receive Tez</p>\n            <form action=\"\">\n                <input type=\"text\" name=\"\" id=\"\" placeholder=\"User Name\" />\n                <input type=\"text\" name=\"\" id=\"cKey\" placeholder=\"Public Key\" />\n                <button class=\"send_tez_button\" onClick={onReceive}>Collect Tez</button>\n            </form>\n\n        </div>\n    )\n};\n\nexport default ReceiveTez;","import { useEffect, useState } from \"react\";\nimport { fetchTransaction } from \"../utils/fetchTransaction\";\nimport { getAccount } from \"../utils/wallet\";\n\n// Show Previous Transaactions done by Account\n\nconst Pending=()=>{\n\n    // Transaction Information storage\n    const [transaction,setTransaction] = useState([{\n        cKey:\"None\",\n        amount:0,\n        to:\"None\",\n        valid:true\n    }]);\n\n    // On Clicking Item ,contract key is Copied\n    const onCopyKey = (e) =>{\n        // console.log(e.target.id)\n        navigator.clipboard.writeText(e.target.id);\n\n        alert(\"Key has been copied\");\n    }\n   \n    // Fetching Account and transaction\n    useEffect(()=>{\n        (async ()=>{\n            \n            const activeAccount = await getAccount();\n            const storage = await fetchTransaction();\n            \n            // console.log(storage);\n\n            let arr= [{}];\n            let count = 0;\n\n            // Pushing all data to a Array \"arr\"\n            for(let i=0;i<storage.list.length;i++){\n\n                if(storage.list[i]._from == activeAccount){\n            \n                    //Saving Data In Variables\n                    const cKey = storage.list[i].cKey;\n                    const to = storage.list[i]._to;\n                    const amount = parseInt(storage.list[i].amount)/1000000;\n                    const valid = storage.list[i].valid;\n\n                    // console.log(storage.list[i].valid);\n                    \n                    arr[count++] = {cKey,to,amount,valid}\n                    \n                }\n            }\n\n            // console.log(arr);    \n            // console.log(\"Transaction\");\n            setTransaction(arr);\n            // console.log(transaction);\n            \n        })();\n      },[]);\n    \n        return (\n    <div className=\"pending\">\n        <div className=\"center_div02\">\n        <div className=\"center_div02_temp\">\n            <div className=\"transaction_history_title\">\n                <p>transaction history</p>\n            </div>\n            <div className=\"history_data\">\n                <div className=\"history_data01\">\n                    \n                    {\n                    transaction.length==0\n                    ?\n                    transaction.map(record=>{\n                        if(record.cKey != undefined){\n                            return (\n                                <>\n                                <div className=\"common_history\">\n                                <div className=\"col1\">\n                                    <p>{record.to}</p>\n                                    <p id={record.cKey} onClick={onCopyKey}>{record.cKey.substring(0,40)+\"...\"}</p>\n                                </div>\n                                <div className=\"col2\">\n                                    <p>{record.amount}</p>\n                                    <p>3 aug 2022, 11:15pm</p>\n                                </div>\n                                <div className=\"col3\">\n                                    {record.valid==false\n                                        ?<img width=\"30px\" height=\"30px\" src=\"https://img.icons8.com/external-flaticons-flat-flat-icons/64/000000/external-correct-press-and-media-flaticons-flat-flat-icons.png\"/>\n                                        :<img width=\"30px\" height=\"30px\" src=\"https://img.icons8.com/ios/50/000000/alarm-clock--v1.png\"/>\n                                    }\n                                </div>\n                                </div>\n                                </>\n                            )\n                        }\n                        \n                    })\n                    :\n                    <p>No Transactions Found</p>\n                    }\n                    </div>\n                </div>\n           </div>\n        </div>\n    </div>\n        )\n    }\n\nexport default Pending;","import React, { useRef, useState } from 'react';\nimport { QrReader } from 'react-qr-reader';\nimport { sendInstantTez } from '../utils/setInstantTez';\nimport { sendTez } from '../utils/setTez';\nimport { connectWallet, getAccount } from '../utils/wallet';\n\n\n// Component for Checking QRcode With Webcam \nconst QRCode = (props) => {\n\n    // Storing Data Fetch By QR\n    const [data, setData] = useState('No result');\n    // Using Reference to a Input\n    const myRef = useRef(null);\n    // for Stopping Webcam Once QRScan is scanned\n    const stopRef = useRef(null);\n    // Setting Mode Contract/Instant\n    const [mode, setMode] = useState(\"Instant\");\n\n    // Changing Mode when user wants\n    const changeMode = (modeType) => {\n        setMode(modeType);\n    }\n\n    // Sending Amount to Receiver checking Instant/Contract Method\n    const onSend = async (e) => {\n        e.preventDefault();\n\n        const check = await getAccount();\n\n        if (check == \"\") {\n            await connectWallet();\n            const activeAddress = await getAccount();\n        }\n\n        const rAddress = document.getElementById('rAddress').value;\n        const amount = document.getElementById('Tez').value;\n\n        // Checking Empty Data\n        if (rAddress == \"\" || amount == \"\") {\n            alert(\"Please Enter value\");\n            return;\n        }\n        if (mode == \"Contract\") {\n            await sendTez(rAddress, amount);\n\n        }\n        else {\n            await sendInstantTez(rAddress, amount);\n        }\n    }\n\n    return (\n        <>\n            <center>\n                <div className=\"QRContainer\" ref={stopRef}>\n                    \n                    {data=='No result'?\n                    <>\n                    <h2>Scan Your QR here</h2>\n                    {/* QRReader React Component to Scan QR's */}\n                    <QrReader\n                        onResult={(result, error) => {\n                            if (!!result) {\n                                setData(result?.text);\n                                myRef.current.scrollIntoView();\n\n                                let stream = stopRef.video.srcObject;\n                                \n                                stopRef.disconnect();\n                                stopRef.current.stopCamera();\n                            }\n\n                            if (!!error) {\n                                console.info(error);\n                            }\n                        }}\n                        style={{ width: '100%',border: '5px solid #0F3D3D' }}\n                    />\n                    </>\n                    :\n                    <h2>QR Scanned</h2>\n                    }\n                   \n                </div>\n            </center>\n            <div className=\"outer\" ref={myRef} style={{margin:\"100px 0px 0px 0px\"}}>\n                <div class=\"payment-type\">\n                    {/* Switching Between Instant Mode and Contract Mode */}\n                    {mode == \"Contract\"\n                        ?\n                        <>\n                            <p class=\"instant\" onClick={() => changeMode(\"Instant\")}>Instant Pay</p>\n                            <p class=\"normal\" onClick={() => changeMode(\"Contract\")}>Pay</p>\n                        </>\n                        :\n                        \n                        <>\n                            <p class=\"normal\" onClick={() => changeMode(\"Instant\")}>Instant Pay</p>\n                            <p class=\"instant\" onClick={() => changeMode(\"Contract\")}>Pay</p>\n                        </>\n                    }\n\n                </div>\n                <form action=\"\">\n                    <input disabled type=\"text\" value={data} id=\"rAddress\" placeholder=\"Public Key\" />\n                    <input type=\"text\" id=\"Tez\" placeholder=\"Ammount (In Tez)\" />\n                    <button class=\"send_tez_button\" onClick={onSend} >Send Tez</button>\n                </form>\n\n            </div>\n        </>\n    );\n};\n\nexport default QRCode;","import { useState, useEffect, StrictMode } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\n// Imported Builded Components\nimport Navbar from './components/Navbar';\nimport AddContact from \"./components/AddContact\";\nimport SendTez from \"./components/SendTez\";\nimport ReceiveTez from \"./components/ReceiveTez\";\nimport Pending from \"./components/PendingTransaction\";\nimport Menu from \"./components/Menu\";\nimport QRCode from \"./components/qrCode\";\n\nconst App = () => {\n\n\n  return (\n    <>\n      <Navbar/>\n\n          <Pending />\n          <SendTez />\n          <ReceiveTez />\n          <div style={{margin:\"200px 0px 0px 0px\"}}>\n          <QRCode />\n          </div>\n          <StrictMode><AddContact /></StrictMode>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}